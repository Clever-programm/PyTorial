6.Переменные

Команду name = input() можно считать так: «Подожди, пока пользователь введет какую-то строку и помести введенную строку в переменную name».

Попробуем разобраться, что это значит. Переменные имеют имя и значение.

Имя переменной

Имя переменной должно отражать ее назначение и может состоять из латинских букв, цифр и символа подчеркивания.
Имя не может начинаться с цифры.

PEP 8

Для именования переменных принято использовать стиль lower_case_with_underscores (слова из маленьких букв с подчеркиваниями).
Избегайте использовать такие символы, которые могут не однозначно трактоваться в различных шрифтах: это буква О (большая и маленькая) и цифра 0, буква I (большая и маленькая) и цифра 1. Нельзя использовать в качестве имени переменной и ключевые слова, которые существуют в языке.

В вышеописанном примере переменная содержит в себе имя пользователя, поэтому мы назвали ее name (имя). Обратите внимание: слово name не подсвечено никаким цветом — в Python это слово ничего не обозначает. Оно что-то значит только в этой программе и только потому, что мы употребили оператор присваивания. При этом интерпретатору совершенно неважно, что значит слово name в английском языке, и мы с тем же успехом могли использовать любое другое имя: например, user («пользователь») или просто n, или даже hello. За имена переменных отвечает программист, то есть вы.

Соблюдайте правило: если в переменной хранится приветствие, пусть она так и называется, если имя — пусть она и называется соответственно.

Значение переменной

Значение переменной — то, что сохраняет в себе переменная.
Знак «=» обозначает команду под названием «оператор присваивания». Оператор присваивания присваивает значение, которое находится справа от знака равно, переменной, которая находится слева от знака равно.

В нашем случае это то, что поместил в нее пользователь командой input(). Это текстовое значение — строка. То есть переменная сохраняет в себе строковое значение. Говорят, что переменная строкового типа.

PEP 8

Всегда окружайте оператор присваивания одним пробелом с каждой стороны:

Правильно:

bird = "Тук-тук"

Неправильно:

bird="Тук-тук"

Еще пример:

print('Какая твоя любимая еда?')
meal = input()
print('Да.', meal, '- это вкусно.')

Обратите внимание: интерпретатор ждет, что пользователь что-то введет с клавиатуры ровно столько раз, сколько команд input() встречается в программе. Каждый input() завершается нажатием Enter на клавиатуре.

print('Как тебя зовут?')
name = input()
print('Привет,', name)
print('А какая твоя любимая еда?')
meal = input()
print('Да.', meal, '- это вкусно.')

Мы задали значение переменной. И что же, оно никогда не меняется? Конечно, в двух разных программах могут быть переменные с одинаковыми названиями, но разными значениями. Но могут ли в пределах одной программы под одним именем быть разные значения?

Да! Оператор присваивания сообщает переменной то или иное значение независимо от того, была ли эта переменная введена раньше. Вы можете менять значение переменной, записав еще один оператор присваивания. Если у нас имеется переменная, мы можем делать с ее значением все что угодно — например, присвоить другой переменной:

hello = 'Здравствуйте.'
hello2 = hello
print(hello2)

Итак, если вы хотите, чтобы у вас была переменная с каким-то именем и каким-то значением, нужно написать на отдельной строчке:

<имя переменной> = <значение переменной>

Как только эта команда выполнится, в программе появится указанная переменная с таким значением.

Помните: команды выполняются последовательно, в том же порядке, в котором они написаны.